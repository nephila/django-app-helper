[tox]
envlist =
    black
    blacken
    docs
    isort
    isort_format
    pep8
    pypi-description
    towncrier
    py{310}-django{41,40,32}-{cms311,cms310,nocms,async}
    py{39,38,37}-django{32}-{cms311,cms310,cms39,nocms,async}
    py{39,38,37}-django{22}-{cms311,cms310,cms39,cms38,cms37,nocms,async}
minversion = 3.23

[testenv]
commands = {env:COMMAND:python} helper.py {posargs}
deps=
    django22: django~=2.2.0
    django32: django~=3.2.0
    django40: django~=4.0.0
    django41: django~=4.1rc1
    cms37: https://github.com/divio/django-cms/archive/release/3.7.x.zip
    cms37: djangocms-text-ckeditor
    cms38: https://github.com/divio/django-cms/archive/release/3.8.x.zip
    cms38: djangocms-text-ckeditor>=4.0,<5.0
    cms39: https://github.com/divio/django-cms/archive/release/3.9.x.zip
    cms39: djangocms-text-ckeditor>=5.0,<6.0
    cms310: https://github.com/divio/django-cms/archive/release/3.10.x.zip
    cms310: djangocms-text-ckeditor>=5.0,<6.0
    cms311: https://github.com/divio/django-cms/archive/release/3.11.x.zip
    cms311: djangocms-text-ckeditor>=5.0,<6.0
    -r{toxinidir}/requirements-test.txt
    async: channels>2.0
    async: daphne
passenv =
    COMMAND
    PYTEST_*

[testenv:nocms]
alwayscopy = True

[testenv:pep8]
commands =
    {envpython} -m flake8
    {envpython} -minterrogate -c pyproject.toml app_helper tests
deps =
    interrogate
    flake8
    flake8-broken-line
    flake8-bugbear
    flake8-builtins
    flake8-coding
    flake8-commas
    flake8-comprehensions
    flake8-eradicate
    flake8-quotes
    flake8-tidy-imports
    pep8-naming
skip_install = true

[testenv:isort]
commands =
    {envpython} -m isort -c --df app_helper tests
deps = isort>5.10,<5.11
skip_install = true

[testenv:isort_format]
commands =
    {envpython} -m isort app_helper tests
deps = {[testenv:isort]deps}
skip_install = true

[testenv:black]
commands =
    {envpython} -m black --check --diff .
deps = black
skip_install = true

[testenv:blacken]
commands =
    {envpython} -m black .
deps = {[testenv:black]deps}
skip_install = true

[testenv:docs]
commands =
    {envpython} -m invoke docbuild
deps =
    invoke
    sphinx
    sphinx-rtd-theme
    sphinx-autobuild
    livereload~=2.6
    django<4.0
    -rrequirements-test.txt
skip_install = true

[testenv:towncrier]
commands =
    {envpython} -m invoke towncrier-check
deps =
    invoke
skip_install = true

[testenv:pypi-description]
commands =
    {envpython} -m invoke clean
    {envpython} -m check_manifest
    {envpython} -m pep517.build .
    {envpython} -m twine check dist/*
deps =
    invoke
    check-manifest
    pep517
    twine
skip_install = true

[testenv:release]
commands =
    {envpython} -m invoke clean
    {envpython} -m check_manifest
    {envpython} -m pep517.build .
    {envpython} -m twine upload {posargs} dist/*
deps = {[testenv:pypi-description]deps}
passenv =
    TWINE_*
skip_install = true

[flake8]
exclude = *.egg-info,.git,.settings,.tox,build,dist,docs,requirements,tmp,*migrations*,tests,data
ignore = E800, W503, C812, C813, C815, C818, C819, C408
max-line-length = 119
# flake8-quotes
inline-quotes = double
# flake8-coding
no-accept-encodings = True
# flake8-tidy-imports
banned-modules = __future__ = this project supports python3 only

[isort]
combine_as_imports = true
default_section = THIRDPARTY
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = app_helper
line_length = 119
multi_line_output = 3
skip = data, .tox
use_parentheses = True

[check-manifest]
ignore =
    .*
    *.ini
    *.toml
    *.json
    *.txt
    *.yml
    *.yaml
    .tx/**
    changes/**
    docs/**
    helper.py
    tasks.py
    tests/**
    *.mo
ignore-bad-ideas =
    *.mo
